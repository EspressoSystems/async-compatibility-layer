name: Build with Nix Workflow

on:
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        flags:
          - '--cfg async_executor_impl="async-std" --cfg async_channel_impl="async-std"'
          - '--cfg async_executor_impl="async-std" --cfg async_channel_impl="flume"'
          - '--cfg async_executor_impl="tokio" --cfg async_channel_impl="tokio"'
          - '--cfg async_executor_impl="tokio" --cfg async_channel_impl="flume"'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - uses: styfle/cancel-workflow-action@0.11.0
        name: Cancel Outdated Builds
        with:
          all_but_latest: true
          access_token: ${{ github.token }}

      - name: Install Nix
        uses: cachix/install-nix-action@v22

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Format
        run: |
          nix develop -c cargo fmt -- --check

      - name: Build
        run: |
          nix develop -c RUSTFLAGS="${{ matrix.flags }}" cargo build --all-targets --workspace --features logging-utils --release

      - name: Test
        run: |
          nix develop -c RUSTFLAGS="${{ matrix.flags }}" cargo test --all-targets --workspace --features logging-utils --release

      - name: Lint
        run: |
          nix develop -c RUSTFLAGS="${{ matrix.flags }}" cargo clippy --all-targets --workspace --features logging-utils --release --bins --tests --examples -- -D warnings

