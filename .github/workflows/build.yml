name: Ubuntu build

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main
      - '*/*'
      - 'update_flake_lock_action'
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        flags:
          - --cfg async_executor_impl="async-std" --cfg async_channel_impl="async-std"
          - --cfg async_executor_impl="async-std" --cfg async_channel_impl="flume"
          - --cfg async_executor_impl="tokio" --cfg async_channel_impl="tokio"
          - --cfg async_executor_impl="tokio" --cfg async_channel_impl="flume"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      RUSTFLAGS: ${{ matrix.flags }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2
        name: Enable Rust Caching

      - name: Format
        run: |
          cargo fmt -- --check

      - name: Build
        run: |
          cargo build --all-targets --workspace --release --features="logging-utils"

      - name: Test
        run: |
          cargo test --all-targets --workspace --release --features="logging-utils"

      - name: Lint
        run: |
          cargo clippy --workspace --all-targets --bins --tests --examples --features="logging-utils" -- -D warnings

      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2

  publish:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: katyo/publish-crates@v2
        with:
            # Only do an actual publish if this is a push to a release tag. Otherwise, do a dry run.
            dry-run: ${{ !(github.event_name == 'push' && github.ref_type == 'tag') }}
            ignore-unpublished-changes: true
            registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
